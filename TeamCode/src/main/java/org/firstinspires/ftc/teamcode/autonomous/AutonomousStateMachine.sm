%class AutonomousController
%package org.firstinspires.ftc.teamcode.autonomous
// http://smc.sourceforge.net/
%start AutonomousStateMachine::Idle

%map AutonomousStateMachine
%%
    Idle
    {
        evStartDemo jump(Demo::Start) { }
        evBlueAutonomous jump(BlueAutonomous::Start) { }
    }
%%
    // StateMachine for Demo sequence
%map Demo
%%
    Start
        Entry {
            // Move straight up to within 6" of the white line
            moveStraight(-24d);
        }
    {
        evMoveComplete ActivateShooter { }
    }
    Rotate
        Entry {
            rotateToHeading(180);
        }
    {
        evRotationComplete ActivateShooter { }
    }

    ActivateShooter
        Entry{
            activateShooter();
         }
    {
        evReadyToShoot Shooting {}
    }

    Shooting
        Entry{
            shootRing();
            startTimer(3000);
        }
    {
        evTimeout Shutdown {  }
    }
    Shutdown
        Entry{
            deactivateShooter();
            startTimer(1000);
        }
    {
    evTimeout Complete { }
    }


    /*
    * Final state
    */
    Complete
        Entry{
            stop();
        }
    {

    }
%%
// StateMachine for Blue Autonomous sequence
// Initial state:  Robot grabber end touching wall on right blue line.  Camera over top of blue line
%map BlueAutonomous
%%
    Start
    Entry {
        // Move straight up 24 inches (backward
        moveStraight(-24d);

    }
    {
        evMoveComplete ShiftLeftToMeasureRings { }
    }
    ShiftLeftToMeasureRings
        Entry {
            strafe(11d);
        }
    {
        evMoveComplete MeasureRings { }
    }

    MeasureRings
    Entry{
        startRingsMeasurement();
    }
    {
        evNoRingsDetected DoNoRingSequence {}
        evOneRingDetected StartOneRing {}
        evFourRingsDetected DoFourRingsSequence {}
    }
    StartOneRing
    Entry{
        // Strafe right (while facing backward) 24 inches
        strafe(-24d);
    }
    {
        evMoveComplete OneRingForwardToPowerShot { }
    }
    OneRingForwardToPowerShot
    Entry{
        // move forward (while facing backward) to the white line to
        moveStraight(-36d);
    }
    {
        evMoveComplete nil { shootRing();
                             startTimer(1000d); }
        evTimeout
    }
    /*
    * Final state
    */
    End
        Entry{
        stop();
    }
    {

    }
%%
