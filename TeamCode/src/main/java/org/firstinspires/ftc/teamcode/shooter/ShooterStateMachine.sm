%class ShooterController
%package org.firstinspires.ftc.teamcode.shooter
// http://smc.sourceforge.net/
%start ShooterStateMachine::Deactivated

%map ShooterStateMachine
%%
    Deactivated
        Entry {
            stopLoaderPully();
        }
    {
        evActivate Activating {}
    }
    Activating
        Entry {
            // move the Loader pulley to Low
            setLoaderPulleyLow();
        }
    {
        // Triggered when motor wheels have reached set speed and the loader
        // pulley is in position.
        evShooterSpeedReady ReadyToShoot {}
        // Triggered to shut down the shooter
        evDeactivate Deactivated {}
        evLoaderPullyHigh nil {}    // shouldn't happen
        evActivate nil {}
    }

    ReadyToShoot
    {
        evShooterSpeedReady nil {}
        evShoot Shooting {}
        // Triggered when speed setting has been changed and we need to wait for motor
        // speed to stabilize first
        evActivate Activating {}
        evDeactivate Deactivated {}

        evLoaderPullyHigh nil {}
    }

    Shooting
        Entry {
            // move the pulley to High to shoot
            setLoaderPulleyHigh();
        }
    {
        // Wait for 1/2 second after pulley reaches high point
        evLoaderPulleyHigh nil { startTimer(500); }
        // After wait, then move the pulley back down
        evTimeout nil {  setLoaderPulleyLow(); }
        // Ready to shoot after pulley is low
        evLoaderPulleyLow ReadyToShoot { }
        // Shut it down
        evDeactivate Deactivated {}
    }

%%