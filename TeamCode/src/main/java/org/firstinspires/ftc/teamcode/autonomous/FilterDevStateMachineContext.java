/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : ShooterStateMachine.sm
 */

package org.firstinspires.ftc.teamcode.autonomous;


public class FilterDevStateMachineContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public FilterDevStateMachineContext(AutonomousController owner)
    {
        this (owner, FilterDevStateMachine.Idle);
    }

    public FilterDevStateMachineContext(AutonomousController owner, AutonomousControllerState initState)
    {
        super (initState);

        _owner = owner;
    }

    @Override
    public void enterStartState()
    {
        getState().entry(this);
        return;
    }

    public void evMoveComplete()
    {
        _transition = "evMoveComplete";
        getState().evMoveComplete(this);
        _transition = "";
        return;
    }

    public void evRotationComplete()
    {
        _transition = "evRotationComplete";
        getState().evRotationComplete(this);
        _transition = "";
        return;
    }

    public void evStartDemo()
    {
        _transition = "evStartDemo";
        getState().evStartDemo(this);
        _transition = "";
        return;
    }

    public AutonomousControllerState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((AutonomousControllerState) _state);
    }

    protected AutonomousController getOwner()
    {
        return (_owner);
    }

    public void setOwner(AutonomousController owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private AutonomousController _owner;

    //-----------------------------------------------------------
    // Constants.
    //

    private static final long serialVersionUID = 1L;

//---------------------------------------------------------------
// Inner classes.
//

    public static abstract class AutonomousControllerState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected AutonomousControllerState(String name, int id)
        {
            super (name, id);
        }

        protected void entry(FilterDevStateMachineContext context) {}
        protected void exit(FilterDevStateMachineContext context) {}

        protected void evMoveComplete(FilterDevStateMachineContext context)
        {
            Default(context);
        }

        protected void evRotationComplete(FilterDevStateMachineContext context)
        {
            Default(context);
        }

        protected void evStartDemo(FilterDevStateMachineContext context)
        {
            Default(context);
        }

        protected void Default(FilterDevStateMachineContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
    // Constants.
    //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class FilterDevStateMachine
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final FilterDevStateMachine_Idle Idle =
            new FilterDevStateMachine_Idle("FilterDevStateMachine.Idle", 0);
    }

    protected static class FilterDevStateMachine_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected FilterDevStateMachine_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FilterDevStateMachine_Idle
        extends FilterDevStateMachine_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FilterDevStateMachine_Idle(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void evStartDemo(FilterDevStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(DoDemo.Start);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class DoDemo
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final DoDemo_Start Start =
            new DoDemo_Start("DoDemo.Start", 1);
        public static final DoDemo_Drive Drive =
            new DoDemo_Drive("DoDemo.Drive", 2);
        public static final DoDemo_RotateBack RotateBack =
            new DoDemo_RotateBack("DoDemo.RotateBack", 3);
        public static final DoDemo_StrafeBack StrafeBack =
            new DoDemo_StrafeBack("DoDemo.StrafeBack", 4);
        public static final DoDemo_Complete Complete =
            new DoDemo_Complete("DoDemo.Complete", 5);
    }

    protected static class DoDemo_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected DoDemo_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class DoDemo_Start
        extends DoDemo_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DoDemo_Start(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(FilterDevStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.rotateToHeading(90);
            return;
        }

        @Override
        protected void evRotationComplete(FilterDevStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(DoDemo.Drive);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class DoDemo_Drive
        extends DoDemo_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DoDemo_Drive(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(FilterDevStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(24d);
            return;
        }

        @Override
        protected void evMoveComplete(FilterDevStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(DoDemo.RotateBack);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class DoDemo_RotateBack
        extends DoDemo_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DoDemo_RotateBack(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(FilterDevStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.rotateToHeading(0);
            return;
        }

        @Override
        protected void evRotationComplete(FilterDevStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(DoDemo.StrafeBack);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class DoDemo_StrafeBack
        extends DoDemo_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DoDemo_StrafeBack(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(FilterDevStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.strafe(-24d);
            return;
        }

        @Override
        protected void evMoveComplete(FilterDevStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(DoDemo.Complete);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class DoDemo_Complete
        extends DoDemo_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private DoDemo_Complete(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(FilterDevStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.stop();
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
