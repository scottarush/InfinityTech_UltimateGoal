/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : AutonomousStateMachine.sm
 */

package org.firstinspires.ftc.teamcode.autonomous;


public class AutonomousStateMachineContext
    extends statemap.FSMContext
{
//---------------------------------------------------------------
// Member methods.
//

    public AutonomousStateMachineContext(AutonomousController owner)
    {
        this (owner, AutonomousStateMachine.Idle);
    }

    public AutonomousStateMachineContext(AutonomousController owner, AutonomousControllerState initState)
    {
        super (initState);

        _owner = owner;
    }

    @Override
    public void enterStartState()
    {
        getState().entry(this);
        return;
    }

    public void evFourRings()
    {
        _transition = "evFourRings";
        getState().evFourRings(this);
        _transition = "";
        return;
    }

    public void evMoveComplete()
    {
        _transition = "evMoveComplete";
        getState().evMoveComplete(this);
        _transition = "";
        return;
    }

    public void evNoRings()
    {
        _transition = "evNoRings";
        getState().evNoRings(this);
        _transition = "";
        return;
    }

    public void evOneRing()
    {
        _transition = "evOneRing";
        getState().evOneRing(this);
        _transition = "";
        return;
    }

    public void evRotationComplete()
    {
        _transition = "evRotationComplete";
        getState().evRotationComplete(this);
        _transition = "";
        return;
    }

    public void evStart()
    {
        _transition = "evStart";
        getState().evStart(this);
        _transition = "";
        return;
    }

    public void evStrafeComplete()
    {
        _transition = "evStrafeComplete";
        getState().evStrafeComplete(this);
        _transition = "";
        return;
    }

    public void evTimeout()
    {
        _transition = "evTimeout";
        getState().evTimeout(this);
        _transition = "";
        return;
    }

    public void evTimeoutComplete()
    {
        _transition = "evTimeoutComplete";
        getState().evTimeoutComplete(this);
        _transition = "";
        return;
    }

    public AutonomousControllerState getState()
        throws statemap.StateUndefinedException
    {
        if (_state == null)
        {
            throw(
                new statemap.StateUndefinedException());
        }

        return ((AutonomousControllerState) _state);
    }

    protected AutonomousController getOwner()
    {
        return (_owner);
    }

    public void setOwner(AutonomousController owner)
    {
        if (owner == null)
        {
            throw (
                new NullPointerException(
                    "null owner"));
        }
        else
        {
            _owner = owner;
        }

        return;
    }

//---------------------------------------------------------------
// Member data.
//

    transient private AutonomousController _owner;

    //-----------------------------------------------------------
    // Constants.
    //

    private static final long serialVersionUID = 1L;

//---------------------------------------------------------------
// Inner classes.
//

    public static abstract class AutonomousControllerState
        extends statemap.State
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected AutonomousControllerState(String name, int id)
        {
            super (name, id);
        }

        protected void entry(AutonomousStateMachineContext context) {}
        protected void exit(AutonomousStateMachineContext context) {}

        protected void evFourRings(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evMoveComplete(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evNoRings(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evOneRing(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evRotationComplete(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evStart(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evStrafeComplete(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evTimeout(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void evTimeoutComplete(AutonomousStateMachineContext context)
        {
            Default(context);
        }

        protected void Default(AutonomousStateMachineContext context)
        {
            throw (
                new statemap.TransitionUndefinedException(
                    "State: " +
                    context.getState().getName() +
                    ", Transition: " +
                    context.getTransition()));
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
    // Constants.
    //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class AutonomousStateMachine
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final AutonomousStateMachine_Idle Idle =
            new AutonomousStateMachine_Idle("AutonomousStateMachine.Idle", 0);
        public static final AutonomousStateMachine_MoveForward MoveForward =
            new AutonomousStateMachine_MoveForward("AutonomousStateMachine.MoveForward", 1);
        public static final AutonomousStateMachine_MeasureRing MeasureRing =
            new AutonomousStateMachine_MeasureRing("AutonomousStateMachine.MeasureRing", 2);
        public static final AutonomousStateMachine_Stop Stop =
            new AutonomousStateMachine_Stop("AutonomousStateMachine.Stop", 3);
    }

    protected static class AutonomousStateMachine_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected AutonomousStateMachine_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class AutonomousStateMachine_Idle
        extends AutonomousStateMachine_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private AutonomousStateMachine_Idle(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void evStart(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(AutonomousStateMachine.MoveForward);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class AutonomousStateMachine_MoveForward
        extends AutonomousStateMachine_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private AutonomousStateMachine_MoveForward(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(18d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(AutonomousStateMachine.MeasureRing);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class AutonomousStateMachine_MeasureRing
        extends AutonomousStateMachine_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private AutonomousStateMachine_MeasureRing(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.activateRingDetector();
            ctxt.startTimer(3000);
            ctxt.startRingsMeasurement();
            return;
        }

        @Override
        protected void exit(AutonomousStateMachineContext context)
            {
            AutonomousController ctxt = context.getOwner();

            ctxt.deactivateRingDetector();
            return;
        }

        @Override
        protected void evFourRings(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.Start);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evNoRings(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.Start);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evOneRing(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.Start);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evTimeoutComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.Start);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class AutonomousStateMachine_Stop
        extends AutonomousStateMachine_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private AutonomousStateMachine_Stop(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.stop();
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class NoRingSequence
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final NoRingSequence_Start Start =
            new NoRingSequence_Start("NoRingSequence.Start", 4);
        public static final NoRingSequence_RotateToSquareA RotateToSquareA =
            new NoRingSequence_RotateToSquareA("NoRingSequence.RotateToSquareA", 5);
        public static final NoRingSequence_DropWobbleGoal DropWobbleGoal =
            new NoRingSequence_DropWobbleGoal("NoRingSequence.DropWobbleGoal", 6);
        public static final NoRingSequence_MoveToPowerShot MoveToPowerShot =
            new NoRingSequence_MoveToPowerShot("NoRingSequence.MoveToPowerShot", 7);
        public static final NoRingSequence_ShootPowerShot ShootPowerShot =
            new NoRingSequence_ShootPowerShot("NoRingSequence.ShootPowerShot", 8);
        public static final NoRingSequence_MoveToWhiteLine MoveToWhiteLine =
            new NoRingSequence_MoveToWhiteLine("NoRingSequence.MoveToWhiteLine", 9);
        public static final NoRingSequence_Stop Stop =
            new NoRingSequence_Stop("NoRingSequence.Stop", 10);
    }

    protected static class NoRingSequence_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected NoRingSequence_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_Start
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_Start(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(51d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.RotateToSquareA);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_RotateToSquareA
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_RotateToSquareA(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.rotateToHeading(-90);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.DropWobbleGoal);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evRotationComplete(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.moveStraight(6d, -90);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_DropWobbleGoal
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_DropWobbleGoal(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.openGrabber();
            ctxt.startTimer(500);
            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            (context.getState()).exit(context);
            context.clearState();
            try
            {
                ctxt.activateShooter();
            }
            finally
            {
                context.setState(NoRingSequence.MoveToPowerShot);
                (context.getState()).entry(context);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_MoveToPowerShot
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_MoveToPowerShot(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(-36d, -90);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.rotateToHeading(0);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

        @Override
        protected void evRotationComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.ShootPowerShot);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_ShootPowerShot
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_ShootPowerShot(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(-12d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.shootRing();
                ctxt.startTimer(2000);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.MoveToWhiteLine);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_MoveToWhiteLine
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_MoveToWhiteLine(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(12d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(NoRingSequence.Stop);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class NoRingSequence_Stop
        extends NoRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private NoRingSequence_Stop(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.stop();
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class OneRingSequence
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final OneRingSequence_Start Start =
            new OneRingSequence_Start("OneRingSequence.Start", 11);
        public static final OneRingSequence_GotoSquareB GotoSquareB =
            new OneRingSequence_GotoSquareB("OneRingSequence.GotoSquareB", 12);
        public static final OneRingSequence_MoveIntoSquareB MoveIntoSquareB =
            new OneRingSequence_MoveIntoSquareB("OneRingSequence.MoveIntoSquareB", 13);
        public static final OneRingSequence_DropWobbleGoal DropWobbleGoal =
            new OneRingSequence_DropWobbleGoal("OneRingSequence.DropWobbleGoal", 14);
        public static final OneRingSequence_RotateToGoal RotateToGoal =
            new OneRingSequence_RotateToGoal("OneRingSequence.RotateToGoal", 15);
        public static final OneRingSequence_DoPowerShot DoPowerShot =
            new OneRingSequence_DoPowerShot("OneRingSequence.DoPowerShot", 16);
        public static final OneRingSequence_MoveToWhiteLine MoveToWhiteLine =
            new OneRingSequence_MoveToWhiteLine("OneRingSequence.MoveToWhiteLine", 17);
        public static final OneRingSequence_Stop Stop =
            new OneRingSequence_Stop("OneRingSequence.Stop", 18);
    }

    protected static class OneRingSequence_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected OneRingSequence_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_Start
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_Start(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.strafe(22d, 0);
            return;
        }

        @Override
        protected void evStrafeComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.GotoSquareB);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_GotoSquareB
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_GotoSquareB(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(74d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.rotateToHeading(-90);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

        @Override
        protected void evRotationComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.MoveIntoSquareB);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_MoveIntoSquareB
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_MoveIntoSquareB(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(6d, -90);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.DropWobbleGoal);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_DropWobbleGoal
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_DropWobbleGoal(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.openGrabber();
            ctxt.startTimer(500);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.RotateToGoal);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.moveStraight(-6d, -90);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_RotateToGoal
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_RotateToGoal(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.rotateToHeading(0);
            ctxt.activateShooter();
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.DoPowerShot);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evRotationComplete(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.moveStraight(-36d, 0);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_DoPowerShot
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_DoPowerShot(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.shootRing();
            ctxt.startTimer(2000);
            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.MoveToWhiteLine);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_MoveToWhiteLine
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_MoveToWhiteLine(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(12d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(OneRingSequence.Stop);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class OneRingSequence_Stop
        extends OneRingSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private OneRingSequence_Stop(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.stop();
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    /* package */ static abstract class FourRingsSequence
    {
    //-----------------------------------------------------------
    // Member methods.
    //

    //-----------------------------------------------------------
    // Member data.
    //

        //-------------------------------------------------------
        // Constants.
        //

        public static final FourRingsSequence_Start Start =
            new FourRingsSequence_Start("FourRingsSequence.Start", 19);
        public static final FourRingsSequence_GotoSquareB GotoSquareB =
            new FourRingsSequence_GotoSquareB("FourRingsSequence.GotoSquareB", 20);
        public static final FourRingsSequence_MoveToColumnOverC MoveToColumnOverC =
            new FourRingsSequence_MoveToColumnOverC("FourRingsSequence.MoveToColumnOverC", 21);
        public static final FourRingsSequence_DropWobbleGoal DropWobbleGoal =
            new FourRingsSequence_DropWobbleGoal("FourRingsSequence.DropWobbleGoal", 22);
        public static final FourRingsSequence_StrafeToAlignPowerShot StrafeToAlignPowerShot =
            new FourRingsSequence_StrafeToAlignPowerShot("FourRingsSequence.StrafeToAlignPowerShot", 23);
        public static final FourRingsSequence_MoveBehindWhiteLine MoveBehindWhiteLine =
            new FourRingsSequence_MoveBehindWhiteLine("FourRingsSequence.MoveBehindWhiteLine", 24);
        public static final FourRingsSequence_DoPowerShot DoPowerShot =
            new FourRingsSequence_DoPowerShot("FourRingsSequence.DoPowerShot", 25);
        public static final FourRingsSequence_MoveToWhiteLine MoveToWhiteLine =
            new FourRingsSequence_MoveToWhiteLine("FourRingsSequence.MoveToWhiteLine", 26);
        public static final FourRingsSequence_Stop Stop =
            new FourRingsSequence_Stop("FourRingsSequence.Stop", 27);
    }

    protected static class FourRingsSequence_Default
        extends AutonomousControllerState
    {
    //-----------------------------------------------------------
    // Member methods.
    //

        protected FourRingsSequence_Default(String name, int id)
        {
            super (name, id);
        }

    //-----------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_Start
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_Start(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.strafe(22d, 0);
            return;
        }

        @Override
        protected void evStrafeComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.GotoSquareB);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_GotoSquareB
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_GotoSquareB(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(80d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.MoveToColumnOverC);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_MoveToColumnOverC
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_MoveToColumnOverC(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.strafe(-47d, 0);
            return;
        }

        @Override
        protected void evStrafeComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.DropWobbleGoal);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_DropWobbleGoal
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_DropWobbleGoal(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.openGrabber();
            ctxt.startTimer(500);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.StrafeToAlignPowerShot);
            (context.getState()).entry(context);
            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {
            AutonomousController ctxt = context.getOwner();

            AutonomousControllerState endState = context.getState();
            context.clearState();
            try
            {
                ctxt.moveStraight(-6d, 0);
            }
            finally
            {
                context.setState(endState);
            }

            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_StrafeToAlignPowerShot
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_StrafeToAlignPowerShot(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.strafe(47d, 0);
            ctxt.activateShooter();
            return;
        }

        @Override
        protected void evStrafeComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.MoveBehindWhiteLine);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_MoveBehindWhiteLine
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_MoveBehindWhiteLine(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(-38d, 0);
            ctxt.activateShooter();
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.DoPowerShot);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_DoPowerShot
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_DoPowerShot(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.shootRing();
            ctxt.startTimer(2000);
            return;
        }

        @Override
        protected void evTimeout(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.MoveToWhiteLine);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_MoveToWhiteLine
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_MoveToWhiteLine(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.moveStraight(12d, 0);
            return;
        }

        @Override
        protected void evMoveComplete(AutonomousStateMachineContext context)
        {

            (context.getState()).exit(context);
            context.setState(FourRingsSequence.Stop);
            (context.getState()).entry(context);
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }

    private static final class FourRingsSequence_Stop
        extends FourRingsSequence_Default
    {
    //-------------------------------------------------------
    // Member methods.
    //

        private FourRingsSequence_Stop(String name, int id)
        {
            super (name, id);
        }

        @Override
        protected void entry(AutonomousStateMachineContext context)
            {
                AutonomousController ctxt = context.getOwner();

            ctxt.stop();
            return;
        }

    //-------------------------------------------------------
    // Member data.
    //

        //---------------------------------------------------
        // Constants.
        //

        private static final long serialVersionUID = 1L;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
